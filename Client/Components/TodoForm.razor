@using Application.Todos.Models
@using Client.Models

@inherits MyComponentBase

<EditForm EditContext=@EditContext
    OnValidSubmit=@(async () => await OnValidSubmit.InvokeAsync(EditContext))>

    <DataAnnotationsValidator />

    <div class="d-flex row justify-content-center">
        <div class="card col-lg-8 col-xl-5 mb-4">
            <div class="card-body">
                <div class="mb-3">
                    <InputText class="form-control" placeholder="タイトル"
                        @bind-Value=@Command.Title />
                    <div class="mt-1">
                        <ValidationMessage For=@(() => Command.Title) />
                    </div>
                </div>
                <div class="mb-3">
                    <InputTextArea class="form-control" placeholder="説明"
                        @bind-Value=@Command.Description />
                    <div class="mt-1">
                        <ValidationMessage For=@(() => Command.Description) />
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-6">
                        <InputDate class="form-control" placeholder="開始日"
                            @bind-Value=@Command.StartDate />
                        <div class="mt-1">
                            <ValidationMessage For=@(() => Command.StartDate) />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <InputDate class="form-control" placeholder="終了日"
                            @bind-Value=@Command.EndDate />
                        <div class="mt-1">
                            <ValidationMessage For=@(() => Command.EndDate) />
                        </div>
                    </div>
                </div>

                <div class="d-flex">
                    <div class="flex-grow-1">
                        <button type="submit" class="btn btn-primary">
                            @(Command.Id == null ? "作成" : "更新")
                        </button>

                        <button type="button" class="btn btn-secondary ms-2"
                            @onclick=@OnResetFormHandler>
                            @(Command.Id == null ? "リセット" : "キャンセル")
                        </button>
                    </div>

                    @if (Command.Id != null)
                    {
                        <div>
                            <button type="button" class="btn btn-danger" @onclick=@OnDeleteHandler>
                                削除
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</EditForm>
