@page "/fetchdata"

<PageTitle>Weather forecast</PageTitle>

@using Client.Data
@using System.Threading
@inject WeatherForecastService ForecastService
@implements IDisposable

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

<AuthorizeView>
  <p>Hello, @context.User.Identity?.Name!</p>
</AuthorizeView>

@if (forecasts == null)
{
  <p><em>Loading...</em></p>
}
else
{
  <table class="table">
  <thead>
    <tr>
      <th>Date</th>
      <th>Temp. (C)</th>
      <th>Temp. (F)</th>
      <th>Summary</th>
    </tr>
  </thead>
  <tbody>
    @foreach (var forecast in forecasts)
      {
        <tr>
          <td>@forecast.Date.ToShortDateString()</td>
          <td>@forecast.TemperatureC</td>
          <td>@forecast.TemperatureF</td>
          <td>@forecast.Summary</td>
        </tr>
      }
    </tbody>
  </table>
}

@code {
  private WeatherForecast[]? forecasts;
  private Timer? _timer;

  protected override void OnInitialized()
  {
    _timer = new Timer((_) => GetForecast(), null, 0, 1000);
  }

  private void GetForecast()
  {
    InvokeAsync(async () =>
    {
      forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
      StateHasChanged();
    });
  }

  public void Dispose()
  {
    if (_timer != null) _timer.Dispose();
  }
}
